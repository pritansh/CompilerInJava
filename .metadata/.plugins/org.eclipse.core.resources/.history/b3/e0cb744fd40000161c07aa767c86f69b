package pc.compiler;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import org.antlr.v4.runtime.ANTLRFileStream;
import org.antlr.v4.runtime.ANTLRInputStream;
import org.antlr.v4.runtime.CommonTokenStream;
import org.antlr.v4.runtime.tree.ParseTree;

import pc.parser.PCLexer;
import pc.parser.PCParser;

public class Main {

	public static void main(String[] args) throws IOException {
		ANTLRInputStream input = new ANTLRFileStream("code.pc");
		PCLexer lexer = new PCLexer(input);
		CommonTokenStream tokens = new  CommonTokenStream(lexer);
		PCParser parser = new PCParser(tokens);
		ParseTree tree = parser.program();
		compile();
		execute();
	}
	
	public static void compile() {
		ProcessBuilder compile = new ProcessBuilder("cmd.exe","/c","cd \"C:\\Users\\Kinshu\\workspace\\CompilerInJava\\Compiler\"" +  
														"&& java -jar lib/jasmin.jar Demo.j");
		runProcess(compile);
	}
	
	public static void execute() {
		ProcessBuilder run = new ProcessBuilder("cmd.exe","/c","cd \"C:\\Users\\Kinshu\\workspace\\CompilerInJava\\Compiler\"" + 
													"&& java Demo");
		runProcess(run);
	}
	
	public static void runProcess(ProcessBuilder process) {
		process.redirectErrorStream(true);
		Process p = null;
		try {
			p = process.start();
		} catch (IOException e) {
			e.printStackTrace();
		}
		BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));
		String line = null;
		while(true) {
			try {
				line = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			if(line==null)
				break;
			System.out.println(line);
		}
	}

}
